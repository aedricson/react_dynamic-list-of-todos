{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","onChange","onInput","useState","todoFind","setTodoFind","useEffect","onSubmit","event","preventDefault","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userName","setUserName","userId","currentUser","name","href","App","visibleTodos","setVisibleTodos","setTodos","setTodo","status","setStatus","query","setQuery","newTodos","searchingTodos","filter","actualTodo","includes","visibleTodo","selectedTodo","currentTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4d59314.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelect: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelect }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th> </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td>\n              <span className=\"icon\">\n                {todo.completed && <i className=\"fas fa-check\" />}\n              </span>\n            </td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                'has-text-success',\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onSelect(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\ntype Props = {\n  onChange: (value: string) => void,\n  onInput: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ onChange, onInput }) => {\n  const [todoFind, setTodoFind] = useState('');\n\n  useEffect(() => {\n    onInput(todoFind);\n  }, [todoFind]);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => {\n        event.preventDefault();\n      }}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={\n              (event) => onChange(event.target.value)\n            }\n          >\n            <option value=\"all\">\n              All\n            </option>\n\n            <option value=\"active\">\n              Active\n            </option>\n\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={todoFind}\n          onChange={(event) => {\n            setTodoFind(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {todoFind\n          && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setTodoFind('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onSelect: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelect }) => {\n  const [userName, setUserName] = useState('');\n\n  useEffect(() => {\n    getUser(todo.userId).then(currentUser => setUserName(currentUser.name));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userName ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userName}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(newTodos => {\n      setTodos(newTodos);\n      setVisibleTodos(newTodos);\n    });\n  }, []);\n\n  const searchingTodos = todos.filter(actualTodo => actualTodo.title.includes(query));\n\n  useEffect(() => {\n    setVisibleTodos(searchingTodos);\n  }, [query]);\n\n  useEffect(() => {\n    switch (status) {\n      case 'all':\n        setVisibleTodos(searchingTodos);\n        break;\n\n      case 'active':\n        setVisibleTodos(searchingTodos.filter(visibleTodo => visibleTodo.completed === false));\n        break;\n\n      case 'completed':\n        setVisibleTodos(searchingTodos.filter(visibleTodo => visibleTodo.completed === true));\n        break;\n\n      default:\n        break;\n    }\n  }, [status]);\n\n  const selectedTodo = (currentTodo: Todo | null) => {\n    setTodo(currentTodo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onInput={setQuery}\n                onChange={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                onSelect={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          todo={todo}\n          onSelect={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}